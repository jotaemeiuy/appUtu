---
// Importar todos los cursos dinámicamente
const importCursos = async () => {
  const cursoFiles = import.meta.glob("../data/*.json");
  const cursos = [];

  for (const path in cursoFiles) {
    const curso = await cursoFiles[path]();
    cursos.push(curso.default || curso);
  }

  return cursos;
};

// Cargar todos los cursos
const allCourses = await importCursos();

// Count total notifications
const today = new Date();

// Get the 3 most recent notifications and those with prueba:true
let recentNotifications = [];
let pruebaNotifications = [];

allCourses.forEach((course) => {
  if (course.notificaciones) {
    const courseNotifications = course.notificaciones
      .filter((notification) => {
        // Si no hay fechaExpiracion, usar la lógica original
        if (!notification.fechaExpiracion) {
          const notificationDate = new Date(notification.fecha);
          return notificationDate >= today;
        }

        // Si hay fechaExpiracion, usar esa fecha para el filtrado
        const expirationDate = new Date(notification.fechaExpiracion);
        return expirationDate >= today;
      })
      .map((notification) => {
        return {
          ...notification,
          curso: course.curso,
          cursoId: course.id,
          color: course.color,
          tipo: "temporal",
        };
      });

    // Separar notificaciones en recientes y pruebas
    const [nonPruebaNotifications, pruebaNotificationsToAdd] =
      courseNotifications.reduce(
        ([nonPrueba, prueba], notification) => {
          if (notification.prueba) {
            return [nonPrueba, [...prueba, notification]];
          }
          return [[...nonPrueba, notification], prueba];
        },
        [[], []],
      );

    // Agregar solo las notificaciones no-prueba a las recientes
    recentNotifications = [...recentNotifications, ...nonPruebaNotifications];

    // Agregar las pruebas al array de pruebas
    pruebaNotifications = [...pruebaNotifications, ...pruebaNotificationsToAdd];
  }
});

// Sort both arrays by date (newest first)
recentNotifications.sort((a, b) => new Date(b.fecha) - new Date(a.fecha));
pruebaNotifications.sort((a, b) => new Date(b.fecha) - new Date(a.fecha));

// Take only the first 3 recent notifications
recentNotifications = recentNotifications.slice(0, 3);

// Count total notifications (both recent and prueba)
const totalNotifications =
  recentNotifications.length + pruebaNotifications.length;
---

<header class="bg-gray-800 shadow-lg">
  <div class="container mx-auto px-4 py-3">
    <div class="flex flex-col md:flex-row justify-between items-center">
      <!-- Logo and Site Title -->
      <div class="flex items-center mb-4 md:mb-0">
        <a
          href={`${import.meta.env.BASE_URL}`}
          class="text-white font-bold text-xl flex items-center"
        >
          <svg
            class="w-8 h-8 mr-2 text-blue-400"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M22 9l-10 -4l-10 4l10 4l10 -4v6 M6 10.6v5.4a6 3 0 0 0 12 0v-5.4"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"></path>
          </svg>
          <span>Prof: Javier Martín</span>
        </a>
      </div>

      <!-- Navigation -->
      <nav>
        <ul class="flex space-x-1 md:space-x-4">
          <li>
            <a
              href={`${import.meta.env.BASE_URL}`}
              class={`px-3 py-2 rounded-md text-sm font-medium flex items-center ${import.meta.env.BASE_URL ? "bg-gray-900 text-white" : "text-gray-300 hover:bg-gray-700 hover:text-white"}`}
            >
              <svg
                class="w-5 h-5 mr-1"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M3 12L5 10M5 10L12 3L19 10M5 10V20C5 20.5523 5.44772 21 6 21H9M19 10L21 12M19 10V20C19 20.5523 18.5523 21 18 21H15M9 21C9.55228 21 10 20.5523 10 20V16C10 15.4477 10.4477 15 11 15H13C13.5523 15 14 15.4477 14 16V20C14 20.5523 14.4477 21 15 21M9 21H15"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"></path>
              </svg>
              Inicio
            </a>
          </li>
          <li>
            <a
              href={`${import.meta.env.BASE_URL}/materiales`}
              class={`px-3 py-2 rounded-md text-sm font-medium flex items-center ${import.meta.env.BASE_URL + "/materiales" ? "bg-gray-900 text-white" : "text-gray-300 hover:bg-gray-700 hover:text-white"}`}
            >
              <svg
                class="w-5 h-5 mr-1"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M3 19a9 9 0 0 1 9 0a9 9 0 0 1 9 0 M3 6a9 9 0 0 1 9 0a9 9 0 0 1 9 0 M3 6l0 13 M12 6l0 13 M21 6l0 13"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"></path>
              </svg>
              Materiales
            </a>
          </li>
          <!--li>
            <a
              href={`${import.meta.env.BASE_URL}/notas`}
              class={`px-3 py-2 rounded-md text-sm font-medium flex items-center ${import.meta.env.BASE_URL + "/notas" ? "bg-gray-900 text-white" : "text-gray-300 hover:bg-gray-700 hover:text-white"}`}
            >
              <svg
                class="w-5 h-5 mr-1"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M9 12L11 14L15 10M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"></path>
              </svg>
              Notas
            </a>
          </li-->
          <li class="relative">
            <button
              id="notifications-btn"
              class={`px-3 py-2 rounded-md text-sm font-medium flex items-center ${import.meta.env.BASE_URL + "/notificaciones" ? "bg-gray-900 text-white" : "text-gray-300 hover:bg-gray-700 hover:text-white"} relative`}
            >
              <svg
                class="w-5 h-5 mr-1"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M15 17H20L18.5951 15.5951C18.2141 15.2141 18 14.6973 18 14.1585V11C18 8.38757 16.3304 6.16509 14 5.34142V5C14 3.89543 13.1046 3 12 3C10.8954 3 10 3.89543 10 5V5.34142C7.66962 6.16509 6 8.38757 6 11V14.1585C6 14.6973 5.78595 15.2141 5.40493 15.5951L4 17H9M15 17V18C15 19.6569 13.6569 21 12 21C10.3431 21 9 19.6569 9 18V17M15 17H9"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"></path>
              </svg>
              Notificaciones
              {
                totalNotifications > 0 && (
                  <span class="absolute -top-2 -right-2 bg-red-500 text-white text-xs font-bold rounded-full h-5 w-5 flex items-center justify-center">
                    {totalNotifications}
                  </span>
                )
              }
            </button>

            <!-- Notifications Dropdown -->
            <div
              id="notifications-dropdown"
              class={`hidden absolute right-0 mt-2 w-80 bg-gray-800 bg-opacity-95 backdrop-blur-sm rounded-lg shadow-lg z-50 overflow-hidden transition-all duration-300 ease-in-out ${import.meta.env.BASE_URL + "/notificaciones" ? "bg-gray-900 text-white" : "text-gray-300 hover:bg-gray-700 hover:text-white"}`}
            >
              <div class="p-3 border-b border-gray-700">
                <h3 class="text-white font-medium">Notificaciones recientes</h3>
              </div>

              <div class="max-h-96 overflow-y-auto">
                {
                  recentNotifications.length > 0 && (
                    <div>
                      {recentNotifications.map((notification) => {
                        const date = new Date(notification.fecha);
                        const formattedDate = date.toLocaleDateString("es-ES", {
                          day: "numeric",
                          month: "short",
                        });

                        return (
                          <a
                            href={`${import.meta.env.BASE_URL}/curso/${notification.cursoId}`}
                            class="block p-3 hover:bg-gray-700 border-b border-gray-700"
                          >
                            <div class="flex items-center mb-1">
                              <span
                                class={`${notification.color} text-xs font-semibold px-2 py-0.5 rounded-full text-white mr-2`}
                              >
                                {notification.curso}
                              </span>
                              <span class="text-xs text-gray-400">
                                {formattedDate}
                              </span>
                            </div>
                            <p class="text-white text-sm">
                              {notification.mensaje}
                            </p>
                          </a>
                        );
                      })}
                    </div>
                  )
                }

                {
                  pruebaNotifications.length > 0 && (
                    <div>
                      <div class="p-3 border-b border-gray-700">
                        <h3 class="text-white font-medium">Pruebas</h3>
                      </div>
                      {pruebaNotifications.map((notification) => {
                        const date = new Date(notification.fecha);
                        const formattedDate = date.toLocaleDateString("es-ES", {
                          day: "numeric",
                          month: "short",
                        });

                        return (
                          <a
                            href={`${import.meta.env.BASE_URL}/curso/${notification.cursoId}`}
                            class="block p-3 hover:bg-gray-700 border-b border-gray-700"
                          >
                            <div class="flex items-center mb-1">
                              <span
                                class={`${notification.color} text-xs font-semibold px-2 py-0.5 rounded-full text-white mr-2`}
                              >
                                {notification.curso}
                              </span>
                              <span class="text-xs text-gray-400">
                                {formattedDate}
                              </span>
                            </div>
                            <p class="text-white text-sm">
                              {notification.mensaje}
                            </p>
                          </a>
                        );
                      })}
                    </div>
                  )
                }
              </div>

              <a
                href={`${import.meta.env.BASE_URL}/notificaciones`}
                class="block p-3 text-center text-blue-400 hover:text-blue-300 bg-gray-900 font-medium"
              >
                Ver todas las notificaciones
              </a>
              <a
                href={`${import.meta.env.BASE_URL}/notas`}
                class="block p-3 text-center text-blue-400 hover:text-blue-300 bg-gray-900 font-medium"
              >
                Ver Notas de Alumnos
              </a>
            </div>
          </li>
          <li>
            <a
              href="mailto:prof.javier.martin@gmail.com"
              class={`px-3 py-2 rounded-md text-sm font-medium flex items-center ${import.meta.env.BASE_URL ? "bg-gray-900 text-white" : "text-gray-300 hover:bg-gray-700 hover:text-white"}`}
            >
              <svg
                class="w-5 h-5 mr-1"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M3 7a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-10z M3 7l9 6l9 -6"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"></path>
              </svg>
              Contacto
            </a>
          </li>
        </ul>
      </nav>
    </div>
  </div>
</header>

<script>
  // Notifications dropdown functionality
  document.addEventListener("DOMContentLoaded", function () {
    const notificationsBtn = document.getElementById("notifications-btn");
    const notificationsDropdown = document.getElementById(
      "notifications-dropdown",
    );

    if (notificationsBtn && notificationsDropdown) {
      // Toggle dropdown when clicking the button
      notificationsBtn.addEventListener("click", function (e) {
        e.preventDefault();
        notificationsDropdown.classList.toggle("hidden");
      });

      // Close dropdown when clicking outside
      document.addEventListener("click", function (e) {
        if (
          !notificationsBtn.contains(e.target) &&
          !notificationsDropdown.contains(e.target)
        ) {
          notificationsDropdown.classList.add("hidden");
        }
      });
    }
  });
</script>

<style>
  /* Add line-clamp utility for truncating notification text */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
